name: Release

on:
  push:
    tags:
      - "v[0-9]*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v1.2.3)'
        required: true

env:
  VERSION: ${{ github.ref_name || inputs.version }}

jobs:
  prepare-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: Build UI
        run: |
          echo "VITE_APP_VERSION=$VERSION" > ./ui/.env
          npm --prefix=./ui ci
          npm --prefix=./ui run build

      - name: Upload UI build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ui-build
          path: ./ui/dist
          retention-days: 1

  build-linux:
    needs: prepare-ui
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Download UI build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-build
          path: ./ui/dist

      - name: Build Linux binaries
        env:
          CGO_ENABLED: 0
          GOOS: linux
        run: |
          mkdir -p dist/linux
          for ARCH in amd64 arm64; do
            go env -w GOARCH=$ARCH
            go build -ldflags="-s -w -X github.com/certimate-go/certimate.Version=$VERSION" -o dist/linux/certimate_${VERSION}_linux_$ARCH
          done

      - name: Upload Linux binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: dist/linux/
          retention-days: 1



  create-release:
    needs: [build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare release assets
        run: |
          mkdir -p dist
          cp -r artifacts/linux-binaries/* dist/

          find dist -type f -exec chmod +x {} \;

          cd dist
          for bin in certimate_*; do
            tmpdir=$(mktemp -d)
            cp "$bin" "${tmpdir}/certimate"
            cp ../LICENSE "$tmpdir/LICENSE"
            cp ../README.md "$tmpdir/README_zhCN.md"
            cp ../README_EN.md "$tmpdir/README_enUS.md"
            cp ../CHANGELOG.md "$tmpdir/CHANGELOG.md"
            sed -i 's/README_EN\.md/README_enUS.md/g' "$tmpdir/README_zhCN.md"
            sed -i 's/README\.md/README_zhCN.md/g' "$tmpdir/README_enUS.md"

            zip -j -X "${bin}.zip" "$tmpdir"/*

            rm -rf "$tmpdir"
          done

          sha256sum *.zip > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.zip
            dist/checksums.txt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
